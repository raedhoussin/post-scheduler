{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel Post Scheduler API",
        "description": "API documentation for Laravel Post Scheduler project",
        "contact": {
            "email": "raedhoussin33@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local API Server"
        }
    ],
    "paths": {
        "/api/activity-logs": {
            "get": {
                "tags": [
                    "ActivityLogs"
                ],
                "summary": "Get list of latest 50 activity logs with user details",
                "operationId": "38649a59c116e933561db69c56b6dbe2",
                "responses": {
                    "200": {
                        "description": "List of activity logs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ActivityLog"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/analytics/posts": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get posts analytics by platform",
                "operationId": "a92bce26364cee8e567dbd1fbfb1889b",
                "responses": {
                    "200": {
                        "description": "Post analytics data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "platform_id": {
                                                "type": "integer"
                                            },
                                            "platform_name": {
                                                "type": "string"
                                            },
                                            "total_posts": {
                                                "type": "integer"
                                            },
                                            "published_posts": {
                                                "type": "integer"
                                            },
                                            "scheduled_posts": {
                                                "type": "integer"
                                            },
                                            "publish_success_rate": {
                                                "description": "Percentage",
                                                "type": "number",
                                                "format": "float"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "c7bb21a0d87049e161b8e4c9b0d909f2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "some-generated-token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "operationId": "dd51a484b7fa0f97c7680fdbde14cf5f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "some-generated-token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout authenticated user",
                "operationId": "df9bdc6c7a6d9f20b983526b2ec0f698",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get authenticated user profile",
                "operationId": "e19c726456758aa5e580e6baa21ef1ba",
                "responses": {
                    "200": {
                        "description": "User profile data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john@example.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/profile": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Update authenticated user's profile",
                "operationId": "b9b473236591c021f23302362a6e70b4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Jane Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "jane@example.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/platforms": {
            "get": {
                "tags": [
                    "Platforms"
                ],
                "summary": "Get list of all platforms",
                "operationId": "b79ea4224ff39ae923cc8756fa1bf671",
                "responses": {
                    "200": {
                        "description": "List of platforms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Platform"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Platforms"
                ],
                "summary": "Create a new platform",
                "operationId": "057364b51fcd5d4e282c22cbc0e92eaf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Twitter"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "social"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Platform created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Platform"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/platforms/{id}": {
            "get": {
                "tags": [
                    "Platforms"
                ],
                "summary": "Get a platform by ID",
                "operationId": "3deec4f1d4d2c00065c8ec17fd57a93b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Platform ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Platform data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Platform"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Platform not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Platforms"
                ],
                "summary": "Update a platform",
                "operationId": "4d11c4ec68257f86e884985341d6f516",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Platform ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Twitter"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "social"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Platform updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Platform"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Platform not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Platforms"
                ],
                "summary": "Delete a platform",
                "operationId": "4e4d8de139b615a76288e770f777e4c9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Platform ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Platform deleted"
                    },
                    "404": {
                        "description": "Platform not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/platforms/toggle": {
            "post": {
                "tags": [
                    "Platforms"
                ],
                "summary": "Enable or disable platform for authenticated user",
                "operationId": "2ed7b7d9e70d72a0b9ab0f8b61b16bfc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "platform_id",
                                    "enabled"
                                ],
                                "properties": {
                                    "platform_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Platform status updated"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get list of user's posts with filters",
                "operationId": "3fda362e2e082b5357ac416e7767e435",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter posts by status (draft, scheduled, published)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "draft",
                                "scheduled",
                                "published"
                            ]
                        }
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Filter posts scheduled from this date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Filter posts scheduled up to this date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Post"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Create a new post",
                "operationId": "dcb66200c3132996151884ac232cf439",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "content",
                                    "status",
                                    "platforms"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "My first post"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Content of the post"
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/image.jpg",
                                        "nullable": true
                                    },
                                    "scheduled_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-05-25T10:00:00Z",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "scheduled",
                                            "published"
                                        ],
                                        "example": "draft"
                                    },
                                    "platforms": {
                                        "description": "Array of platform IDs to publish this post on",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/posts/{id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get a single post by ID",
                "operationId": "142b5adb0520cca80cedfe09d9298332",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update an existing post",
                "operationId": "650f4bed0846d9350903d8a17c7b503a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated post title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Updated content"
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/image2.jpg",
                                        "nullable": true
                                    },
                                    "scheduled_at": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-05-25T10:00:00Z",
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "draft",
                                            "scheduled",
                                            "published"
                                        ],
                                        "example": "draft"
                                    },
                                    "platforms": {
                                        "description": "Array of platform IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete a post",
                "operationId": "9d99f2e42af2f722a058a86245aa856f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Post deleted successfully"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/posts/{id}/publish": {
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Publish a scheduled post immediately",
                "operationId": "5f3b057681744e485c43edc4ae845efd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID to publish",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post published successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ActivityLog": {
                "title": "Activity Log Model",
                "description": "Represents system activity records",
                "required": [
                    "id",
                    "user_id",
                    "action",
                    "description"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier for the activity log",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "description": "ID of the user who performed the activity",
                        "type": "integer",
                        "example": 5
                    },
                    "action": {
                        "description": "Type of activity performed",
                        "type": "string",
                        "enum": [
                            "Created post",
                            "Updated post",
                            "Deleted post"
                        ],
                        "example": "Created post"
                    },
                    "description": {
                        "description": "Detailed description of the activity",
                        "type": "string",
                        "example": "User created a new post"
                    },
                    "created_at": {
                        "description": "Timestamp when activity was recorded",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-26T10:00:00Z"
                    },
                    "updated_at": {
                        "description": "Timestamp when activity was last updated",
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-26T10:00:00Z"
                    },
                    "user": {
                        "description": "Associated user object (nullable)",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            },
                            {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "Platform": {
                "title": "Platform",
                "required": [
                    "id",
                    "name",
                    "type"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Twitter"
                    },
                    "type": {
                        "type": "string",
                        "example": "social"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-23T14:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-23T14:00:00Z"
                    }
                },
                "type": "object"
            },
            "Post": {
                "title": "Post",
                "required": [
                    "title",
                    "content",
                    "status",
                    "user_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "My first post"
                    },
                    "content": {
                        "type": "string",
                        "example": "This is the post content"
                    },
                    "image_url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/image.jpg",
                        "nullable": true
                    },
                    "scheduled_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-23T15:00:00Z",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "scheduled",
                            "published"
                        ],
                        "example": "scheduled"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-22T12:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-22T12:30:00Z"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Enter token to authorize",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "ActivityLogs",
            "description": "API Endpoints for Activity Logs"
        },
        {
            "name": "Analytics",
            "description": "Analytics"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Platforms",
            "description": "Platforms"
        },
        {
            "name": "Posts",
            "description": "Posts"
        }
    ]
}